function onFrame(t){for(var a=0;count>a;a++){var i=circleLayer.children[a],o=lineLayer.children[a],n=lineLocation[a]-o.lastSegment.point,e=locations[a]-i.position;i.position+=e/(i.data.totalDist/circleSpeed),o.firstSegment.point=i.position;var s=i.data.totalDist,d=Math.round(e.length),r=(s-d)/s,l=i.data.radiusDiff,g=i.data.startingRadius;if(o.data.looking===!1&&(o.lastSegment.point+=n/lineSpeed,o.strokeColor.lightness=.6+.4*r),i.data.growing===!0?i.radius=Math.abs(r*l+g):(g=(g+l)*threshold,i.radius=Math.abs(g-r*l)),r>threshold){if(o.data.startLooking===!0){var u=Point.random()*view.size;o.data.newLocation=u,o.data.startLooking=!1,o.data.looking=!0}if(n=o.data.newLocation-o.lastSegment.point,o.data.looking===!0&&(o.strokeColor.lightness=.6,o.lastSegment.point+=n/lineSpeed),n.length<15&&(o.data.found=!0),o.data.found===!0){lineLocation[a]=o.data.newLocation,locations[a]=o.data.newLocation;var h=locations[a]-i.position;i.data.totalDist=h.length,i.data.growing=!i.data.growing,o.data.looking=!1,o.data.found=!1,o.data.startLooking=!0}}o.strokeColor.hue+=.5}}for(var count=12,threshold=.99,dots=[],locations=[],lineLocation=[],startingPoint=[],circleSpeed=10,lineSpeed=80,minRadius=3,radiusRange=6,maxRadius=radiusRange-minRadius,i=0;count>i;i++){var destination=Point.random()*view.size,startingPoints=Point.random()*view.size;startingPoint.push(startingPoints),locations.push(destination),lineLocation.push(destination)}for(var lineLayer=new Layer,i=0;count>i;i++){var path=new Path({strokeWidth:1,strokeCap:"round",segments:[startingPoint[i],lineLocation[i]],strokeColor:{hue:50*i/count,saturation:.7,lightness:0},closed:!1,opacity:.7});path.data={startLooking:!0,looking:!1,found:!1,newLocation:null}}for(var circleLayer=new Layer,i=0;count>i;i++){if(i%2===0){var dot=new Shape.Circle({center:startingPoint[i],radius:minRadius*threshold,name:"dot"});dot.data={startingRadius:dot.radius,radiusDiff:radiusRange*threshold,totalDist:Math.round((destination-dot.position).length),growing:!0}}else{var dot=new Shape.Circle({center:startingPoint[i],radius:maxRadius*threshold,name:"dot"});dot.data={startingRadius:dot.radius,radiusDiff:radiusRange*threshold,totalDist:Math.round((destination-dot.position).length),growing:!1}}dot.data={startingRadius:dot.radius,radiusDiff:6*threshold,totalDist:Math.round((destination-dot.position).length),growing:!0},vector=locations[i]-dot.position,dot.data.percentTraveled=dot.data.totalDist-Math.round(vector.length),dots.push(dot)}